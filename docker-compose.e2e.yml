services:
  e2e-db:
    container_name: expensytrack_postgres_container_e2e_test
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_HOST_PORT}:5432"
    networks:
      e2e-network:
        ipv4_address: 172.28.0.2

  e2e-pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_container
    restart: always
    environment:
      PGPASSWORD: ${PGPASSWORD}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_HOST_PORT}:80"
    networks:
      e2e-network:
        ipv4_address: 172.28.0.3
    depends_on:
      - e2e-db

  e2e-backend:
    container_name: backend_container_e2e_test
    build:
      context: ./
      dockerfile: ./apps/bff/Dockerfile
    ports:
      - "${BACKEND_HOST_PORT}:4000"
    environment:
      NODE_ENV: e2e
      PORT: 4000
      CORS_ORIGIN: http://172.28.0.5:5173
      DATABASE_URL: postgresql://postgres:postgres@172.28.0.2:5432/expensytrack_db?schema=public
    networks:
      e2e-network:
        ipv4_address: 172.28.0.4
    depends_on:
      - e2e-db

  e2e-frontend:
    container_name: frontend_container_e2e_test
    build:
      context: ./
      dockerfile: ./apps/webapp/Dockerfile
      args:
        VITE_BFF_ADDRESS: "http://localhost:4000"
    ports:
      - "${FRONTEND_HOST_PORT}:80"
    networks:
      e2e-network:
        ipv4_address: 172.28.0.5
    depends_on:
      - e2e-backend

networks:
  e2e-network:
    driver: bridge
    ipam:
      config:
        - subnet: "172.28.0.0/16"
          gateway: 172.28.0.1