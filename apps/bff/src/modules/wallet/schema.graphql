enum WalletIcon {
  CREDIT_CARD
  CONTACTLESS
  WALLET
  CARDHOLDER
  BANK
  VAULT
  PIGGY_BANK
  PAYPAL
  AMAZON
}

enum CurrencyCode {
  EUR
  USD
  GBP
}

type Wallet {
  id: ID!
  displayName: String!
  icon: WalletIcon!
  initialBalance: Float!
  currentBalance: Float!
  createdAt: DateTime!
  currencyCode: CurrencyCode!
  updatedAt: DateTime!
  ownerId: ID!
  transactions: [Transaction]
}

type WalletsResult implements Response {
  success: Boolean!
  error: GraphqlError
  result: [Wallet!]
}

type CreateWalletResult implements Response {
  success: Boolean!
  error: GraphqlError
  result: Wallet
}

type DeleteWalletsResult implements Response {
  success: Boolean!
  error: GraphqlError
  result: Int
}

input CreateWalletInput {
  displayName: String!
  icon: WalletIcon!
  initialBalance: Float!
  currencyCode: CurrencyCode!
}

input DeleteWalletsInput {
  ids: [ID!]!
}

type Query {
  wallets: WalletsResult
}

type Mutation {
  createWallet(input: CreateWalletInput!): CreateWalletResult
  deleteWallets(input: DeleteWalletsInput!): DeleteWalletsResult
}
